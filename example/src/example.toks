[TOKEN]: 	WITH	with
[TOKEN]: 	PACKAGEID	Ada.Text_IO
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	USE	use
[TOKEN]: 	PACKAGEID	Ada.Text_IO
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	FUNCTION	function
[TOKEN]: 	Identifier	add
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	A
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	Identifier	B
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	RPAREN	)
[TOKEN]: 	RETURN	return
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	IS	is
[TOKEN]: 	BEGIN	begin
[TOKEN]: 	RETURN	return
[TOKEN]: 	Identifier	A
[TOKEN]: 	ADD	+
[TOKEN]: 	Identifier	B
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	Identifier	add
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	PROCEDURE	procedure
[TOKEN]: 	Identifier	function1
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	A
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	Identifier	B
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	RPAREN	)
[TOKEN]: 	IS	is
[TOKEN]: 	Identifier	A
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	ASSIGN	:=
[TOKEN]: 	DECIMIAL	1
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	Identifier	B
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	ASSIGN	:=
[TOKEN]: 	DECIMIAL	2
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	Identifier	C
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	ASSIGN	:=
[TOKEN]: 	Identifier	add
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	A
[TOKEN]: 	COMMA	,
[TOKEN]: 	Identifier	B
[TOKEN]: 	RPAREN	)
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	BEGIN	begin
[TOKEN]: 	PUT	Put
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	C
[TOKEN]: 	RPAREN	)
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	PUT_LINE	Put_Line
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	C
[TOKEN]: 	TIC	'
[TOKEN]: 	Identifier	Image
[TOKEN]: 	RPAREN	)
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	Identifier	function1
[TOKEN]: 	SEMICOLON	;
