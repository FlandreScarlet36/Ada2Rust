[TOKEN]: 	PROCEDURE	procedure
[TOKEN]: 	Identifier	case4
[TOKEN]: 	IS	is
[TOKEN]: 	PROCEDURE	procedure
[TOKEN]: 	Identifier	Compute_A
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	V
[TOKEN]: 	COLON	:
[TOKEN]: 	NATURAL	Natural
[TOKEN]: 	RPAREN	)
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	PROCEDURE	procedure
[TOKEN]: 	Identifier	Compute_B
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	V
[TOKEN]: 	COLON	:
[TOKEN]: 	NATURAL	Natural
[TOKEN]: 	RPAREN	)
[TOKEN]: 	IS	is
[TOKEN]: 	BEGIN	begin
[TOKEN]: 	IF	if
[TOKEN]: 	Identifier	V
[TOKEN]: 	GE	>
[TOKEN]: 	DECIMIAL	5
[TOKEN]: 	THEN	then
[TOKEN]: 	Identifier	Compute_A
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	V
[TOKEN]: 	SUB	-
[TOKEN]: 	DECIMIAL	1
[TOKEN]: 	RPAREN	)
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	IF	if
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	Identifier	Compute_B
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	PROCEDURE	procedure
[TOKEN]: 	Identifier	Compute_A
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	V
[TOKEN]: 	COLON	:
[TOKEN]: 	NATURAL	Natural
[TOKEN]: 	RPAREN	)
[TOKEN]: 	IS	is
[TOKEN]: 	BEGIN	begin
[TOKEN]: 	IF	if
[TOKEN]: 	Identifier	V
[TOKEN]: 	GE	>
[TOKEN]: 	DECIMIAL	2
[TOKEN]: 	THEN	then
[TOKEN]: 	Identifier	Compute_B
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	V
[TOKEN]: 	SUB	-
[TOKEN]: 	DECIMIAL	1
[TOKEN]: 	RPAREN	)
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	IF	if
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	Identifier	Compute_A
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	PROCEDURE	procedure
[TOKEN]: 	Identifier	Compute_C
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	V
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	Identifier	W
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	RPAREN	)
[TOKEN]: 	IS	is
[TOKEN]: 	Identifier	R
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	BEGIN	begin
[TOKEN]: 	Identifier	R
[TOKEN]: 	ASSIGN	:=
[TOKEN]: 	Identifier	V
[TOKEN]: 	ADD	+
[TOKEN]: 	Identifier	W
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	Identifier	Compute_C
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	Identifier	A
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	ASSIGN	:=
[TOKEN]: 	DECIMIAL	12
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	Identifier	B
[TOKEN]: 	COLON	:
[TOKEN]: 	INTEGER	Integer
[TOKEN]: 	ASSIGN	:=
[TOKEN]: 	DECIMIAL	44
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	BEGIN	begin
[TOKEN]: 	Identifier	Compute_A
[TOKEN]: 	LPAREN	(
[TOKEN]: 	DECIMIAL	15
[TOKEN]: 	RPAREN	)
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	Identifier	Compute_C
[TOKEN]: 	LPAREN	(
[TOKEN]: 	Identifier	A
[TOKEN]: 	COMMA	,
[TOKEN]: 	Identifier	B
[TOKEN]: 	RPAREN	)
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	Identifier	case4
[TOKEN]: 	SEMICOLON	;
