[TOKEN]: 	WITH	with
[TOKEN]: 	PACKAGEID	Ada.Text_IO
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	USE	use
[TOKEN]: 	PACKAGEID	Ada.Text_IO
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	PROCEDURE	procedure
[TOKEN]: 	Identifier	case13
[TOKEN]: 	IS	is
[TOKEN]: 	Identifier	B
[TOKEN]: 	COLON	:
[TOKEN]: 	BOOLEAN	Boolean
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	BEGIN	begin
[TOKEN]: 	FOR	for
[TOKEN]: 	Identifier	I
[TOKEN]: 	IN	in
[TOKEN]: 	DECIMIAL	1
[TOKEN]: 	DOTDOT	..
[TOKEN]: 	DECIMIAL	10
[TOKEN]: 	LOOP	loop
[TOKEN]: 	CASE	case
[TOKEN]: 	Identifier	I
[TOKEN]: 	IS	is
[TOKEN]: 	WHEN	when
[TOKEN]: 	DECIMIAL	1
[TOKEN]: 	SINGLEOR	|
[TOKEN]: 	DECIMIAL	3
[TOKEN]: 	SINGLEOR	|
[TOKEN]: 	DECIMIAL	5
[TOKEN]: 	SINGLEOR	|
[TOKEN]: 	DECIMIAL	7
[TOKEN]: 	SINGLEOR	|
[TOKEN]: 	DECIMIAL	9
[TOKEN]: 	RIGHTSHAFT	=>
[TOKEN]: 	Identifier	B
[TOKEN]: 	ASSIGN	:=
[TOKEN]: 	TRUE	True
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	WHEN	when
[TOKEN]: 	DECIMIAL	2
[TOKEN]: 	SINGLEOR	|
[TOKEN]: 	DECIMIAL	4
[TOKEN]: 	SINGLEOR	|
[TOKEN]: 	DECIMIAL	6
[TOKEN]: 	SINGLEOR	|
[TOKEN]: 	DECIMIAL	8
[TOKEN]: 	SINGLEOR	|
[TOKEN]: 	DECIMIAL	10
[TOKEN]: 	RIGHTSHAFT	=>
[TOKEN]: 	Identifier	B
[TOKEN]: 	ASSIGN	:=
[TOKEN]: 	FALSE	False
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	CASE	case
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	LOOP	loop
[TOKEN]: 	SEMICOLON	;
[TOKEN]: 	END	end
[TOKEN]: 	Identifier	case13
[TOKEN]: 	SEMICOLON	;
